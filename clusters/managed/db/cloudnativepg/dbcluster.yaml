apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cn-postgres
spec:
  instances: 3
  superuserSecret:
    name: cn-postgres-secret
  envFrom:
    - secretRef: 
        name: cn-postgres-secret
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.8
  storage:
    size: 2Gi
    storageClass: milano-v2
  postgresql:
    shared_preload_libraries:
      - "vectors.so"
  managed:
    services:
      additional:
        - selectorType: rw
          serviceTemplate:
            metadata:
              name: "cn-postgres-np"
            spec:
              type: NodePort
              ports:
                - port: 5432
                  nodePort: 30555
  enableSuperuserAccess: true
  bootstrap:
    initdb:
      secret:
        name: cn-postgres-secret
      postInitSQL:
        - ALTER SYSTEM SET search_path TO "$user", public, vectors;
        - CREATE EXTENSION IF NOT EXISTS "vectors";
        - CREATE DATABASE authentik;
        - DO $$
          BEGIN
            IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'svc_authentik') THEN
              EXECUTE format('CREATE USER svc_authentik WITH PASSWORD %L', '${SVC_APP_PASSWORD}');
            ELSE
              EXECUTE format('ALTER USER svc_authentik WITH PASSWORD %L', '${SVC_APP_PASSWORD}');
            END IF;
            GRANT ALL PRIVILEGES ON DATABASE authentik TO svc_authentik;
          END
          $$ LANGUAGE plpgsql;
        - CREATE DATABASE docmost;
        - DO $$
          BEGIN
            IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'svc_docmost') THEN
              EXECUTE format('CREATE USER svc_docmost WITH PASSWORD %L', '${SVC_APP_PASSWORD}');
            ELSE
              EXECUTE format('ALTER USER svc_docmost WITH PASSWORD %L', '${SVC_APP_PASSWORD}');
            END IF;
            GRANT ALL PRIVILEGES ON DATABASE docmost TO svc_docmost;
          END
          $$ LANGUAGE plpgsql;
        - CREATE DATABASE vaultwarden;
        - DO $$
          BEGIN
            IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'svc_vaultwarden') THEN
              EXECUTE format('CREATE USER svc_vaultwarden WITH PASSWORD %L', '${SVC_APP_PASSWORD}');
            ELSE
              EXECUTE format('ALTER USER svc_vaultwarden WITH PASSWORD %L', '${SVC_APP_PASSWORD}');
            END IF;
            GRANT ALL PRIVILEGES ON DATABASE vaultwarden TO svc_vaultwarden;
          END
          $$ LANGUAGE plpgsql;